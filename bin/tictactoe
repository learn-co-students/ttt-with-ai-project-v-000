#!/usr/bin/env ruby

require_relative '../config/environment'

puts "Welcome to Tic Tac Toe!"
puts "What kinda game you wanna play? 0, 1 or 2 player?"
game_type = gets.strip.to_i
case game_type
  when 0
    player_1 = Players::Computer.new("X")
    player_2 = Players::Computer.new("O")
  when 1
    puts "Who goes first, human player (1) or computer (2)?"
    first = gets.strip.to_1
    if first == 1
      player_1 = Players::Human.new("X")
      player_2 = Players::Computer.new("O")
    else
      player_1 = Players::Computer.new("X")
      player_2 = Players::Human.new("O")
    end
  else
    player_1 = Players::Human.new("X")
    player_2 = Players::Human.new("O")
  end
end
game = Game.new(player_1 = player_1, player_2 = player_2, board = Board.new)
game.play

=begin
puts "Welcome to Tic Tac Toe!"
puts "What kinda game you wanna play? 0,1, or 2 player?"
input = gets.strip.to_i
  if input == 2
    game = Game.new(player_1 = Players::Human.new("X"),
      player_2 = Players::Human.new("O"),
      board = Board.new)
  elsif input == 1
      game = Game.new(player_1 = Players::Human.new("X"),
        player_2 = Players::Computer.new("O"),
        board = Board.new)
  else
        game = Game.new(player_1 = Players::Computer.new("X"),
        player_2 = Players::Computer.new("O"),
        board = Board.new)
      end

game.play
=end


#Prompt the user for what kind of game they want to play, 0,1, or 2 player.
#Ask the user for who should go first and be "X".
#Use the input to correctly initialize a Game with the appropriate player types and token values.
#When the game is over, the CLI should prompt the user if they would like to play again and allow them to choose a new configuration for the game as described above. If the user doesn't want to play again, exit the program.
