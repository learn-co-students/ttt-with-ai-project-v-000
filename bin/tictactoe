#!/usr/bin/env ruby

#Greet the user with a message.
#Prompt the user for what kind of game they want to play, 0,1, or 2 player.
#Ask the user for who should go first and be "X".
#Use the input to correctly initialize a Game with the appropriate player types and token values.
#When the game is over, the CLI should prompt the user if they would like to play again and allow them to choose a new configuration for the game as described above. If the user doesn't want to play again, exit the program.

require_relative '../config/environment'
puts "Welcome to Tic Tac Toe!"

def start
  puts "Which type of game would you like to play: 0, 1 or 2 player...or wargames?"
  input = gets.strip
  if input == "wargames" || input == "Wargames" || input == "wg"
    @game = Game.new(player_1 = Players::Computer.new("X"), player_2 = Players::Computer.new("O"), board = Board.new)
    @times_won = 0
    100.times do
      @game.play
      #@times_won += 1 if @game.won? == true
    end
    puts "Woo hoo! The game has been won #{@times_won} times!"
  elsif input == "0"
    @game = Game.new(player_1 = Players::Computer.new("X"), player_2 = Players::Computer.new("O"), board = Board.new)
    @game.play
  elsif input == "1"
    puts "Who should play first, Human or Computer?"
    input_type = gets.strip
    if input_type == "Human" || input_type == "human"
      @game = Game.new(player_1 = Players::Human.new("X"), player_2 = Players::Computer.new("O"), board = Board.new)
      @game.play
    else
      @game = Game.new(player_1 = Players::Computer.new("X"), player_2 = Players::Human.new("O"), board = Board.new)
      @game.play
    end
  elsif input == "2"
    @game = Game.new
    @game.play
  else
    puts "Which type of game would you like to play, 0, 1 or 2 player?"
  end

  if @game.over? == true
    puts "Would you like to play again?"
    input_go = gets.strip
    if input_go == "yes" || input_go == "y"
      start
    else
      puts "Later gator!"
    end
  end
end
start
